# Generated by Django 2.2.7 on 2019-12-01 23:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Palestrante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=45)),
                ('afiliacao', models.CharField(max_length=45)),
                ('imagem', models.ImageField(default='none.png', upload_to='imagem')),
            ],
        ),
        migrations.CreateModel(
            name='Programacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('data_hora', models.DateTimeField()),
                ('atividade', models.CharField(choices=[('1', 'Outros'), ('2', 'Palestra'), ('3', 'Oficina'), ('4', 'Mesa Redona'), ('5', 'Mini Curso')], default='1', max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('nome', models.CharField(max_length=75)),
                ('telefone', models.CharField(max_length=25)),
                ('is_staff', models.BooleanField(default=False, help_text='Designa se o usuário pode efetuar login neste administrador.', verbose_name='gerência')),
                ('is_active', models.BooleanField(default=True, help_text='Designa se esse usuário deve ser tratado como ativo. Desmarque isso em vez de excluir contas.', verbose_name='ativo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'organização',
                'verbose_name_plural': 'organizações',
            },
        ),
    ]
